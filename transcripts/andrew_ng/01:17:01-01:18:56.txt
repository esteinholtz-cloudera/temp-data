{
  "Speaker": "Andrew Ng",
  "Start": "01:17:01",
  "End": "01:18:56",
  "Text": "think building and deploying machine learning systems is hard. Uh There's a huge gulf between something that works and you put the notebook on your laptop versus something that runs their production deployment setting in a, in a factory or agriculture plants or whatever. Um So I see a lot of people, you know, get something to work on your laptop and say, wow, look what I've done. And that's, that's, that's great. That's hard. That's a very important first step. law teams underestimate the rest of the steps needed. Um So for example, I've heard this exact same conversation between a lot of machine learning people and business people. The machine learning person says, look, my algorithm does well on the test set and the clean test set I didn't repeat. Um And the machine and the business person says, you very much, but your algorithm sucks. It doesn't work. And the machine learning person says, no, wait, I did well on the test set Um And I think there is a gulf between what it takes to do well on the test set on your hard drive versus what it takes. Well in a, in a deployment setting, some, some common problems, um robustness and generalization, you know, you deploy something in the factory, maybe they chop down a tree outside the factory. So the tree no longer covers the window and the lighting is different. So the fact that changes and machine learning and especially in academia, we don't know how to deal with test set distributions that are dramatically different than the training set distribution. You know that this research, this stuff like domain adaptation, uh transfer learning, you know the people working on it, but we're really not good at this. So how do you actually get this to work because your tested distribution is going to change. Uh uh And I think um also you look at the number of lines of code in the software system, the machine learning model is maybe 5% or even fewer uh relative to the entire software system you need to build. So how do you get all that work done and make it reliable and systematic?"
}