{
  "Speaker": "Andrew Ng",
  "Start": "00:38:23",
  "End": "00:39:45",
  "Text": ". And also the systematic frameworks of thinking for how to go about building practical machine learning. to make an analogy um when we learn to code, we have to learn the syntax of some language, right? Be it Python or C++ or octave or whatever. Um But equally important or maybe even more important part of coding is to understand how to string together these lines of code and the coherent thing. So you know, when should you put something in the function column? When should you not, how do you think about abstraction? So those frameworks are what makes the program efficient even more than understanding the syntax. remember when I was an undergrad at Carnegie Mellon, um one of my friends would debug their code by first trying to compile it and then it was C plus code. And then every line of the syntax error, they want to get rid of syntax errors as quickly as possible. So how do you do that? Well, they would delete every single line of code with a syntax error. So really efficient for getting rid of syntax errors, a horrible debugging services. So I think so we learn how to debug. Uh And I think in machine learning, the way you debug machine learning program is very different than the way you, know, like do binary research or whatever or use a debug trace through the code in the traditional software engineering. So as an evolving discipline, but I find that the people that are really good at debugging machine learning algorithms are easily 10 X maybe 100 X faster at getting something to work. So"
}