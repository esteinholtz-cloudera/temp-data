{
  "Speaker": "Andrej Karpathy",
  "Start": "01:16:27",
  "End": "01:18:16",
  "Text": "mean, on the high level, I would say if you look at the software running in in the autopilot, I gave a number of talks on this topic, I would say originally a lot of it was written in software one point. Oh, there's imagine lots of C++, all right. And then gradually there was a tiny neural net that was, for example, predicting given a single image, is there like a traffic light or not? Or is there a landline marking or not? And this neural net didn't have too much to do in this, in the scope of the software. It was making tiny predictions on individual little image then the rest of the system stitched it up. So OK, we're actually, we don't have just a single camera, we have eight cameras, we actually have eight cameras over time. And so what do you do with these predictions? How do you put them together? How do you do the fusion of all that information and how do you act on it? All of that was written by humans um in C++ then we decided, OK, we don't actually want to do all of that fusion in C++ code because we're actually not good enough to write that algorithm. We want the neurons to write the algorithm and we want to port uh all of that software into the 2.0 stack. And so then we actually had neurons that now take all the eight camera images simultaneously and make predictions for all of that. So, um and, and, and actually, they don't make predictions in the, in the space of images. They now make predictions directly in 3D. And actually, they don't uh in three dimensions around the car. And now, actually, we don't um manually fuse the predictions over in 3d over time, we don't trust ourselves to write that tracker. So actually, we give the neural net uh the information over time. So it takes these videos now and makes us predictions. And so you're sort of just like putting more and more power into the neural net when processing. at the end of it, the eventual sort of goal is to have most of the software potentially be in the 2.0 land. Um because it works significantly better. Humans are just not very good at writing software basically. So"
}